#!/bin/sh
#
# findup - search for a file in the current directory on upwards,
# reports the directory containing that file or prints nothing and exits
# with a non-zero status.

QUIET=0
NO_ESCAPE_HOME=
# fun fact: the Heirloom Bourne Shell lacks an -e test
TEST_FLAG="-r"

OPT=
while getopts dfhHq OPT; do
    case "$OPT" in
        d)
            TEST_FLAG="-d"
            ;;
        f)
            TEST_FLAG="-f"
            ;;
        h)
            echo >&2 "Usage: findup [-d|-f] [-q] [-H] filename"
            exit 64
            ;;
        H)
            NO_ESCAPE_HOME="`dirname "$HOME"`"
            ;;
        q)
            QUIET=1
            ;;
    esac
done
shift "`expr $OPTIND - 1`"

WANTED="$1"
if [ -z "$WANTED" ]; then
    echo >&2 "Usage: findup [-d|-f] [-q] [-H] filename"
    exit 64
fi
# special case for root dir, otherwise `findup /` matches `pwd`. there
# are more resource efficient ways to find the root directory...
if [ "$WANTED" = / ]; then
    echo /
    exit
fi

SEARCHDIR="$2"
if [ -z "$SEARCHDIR" ]; then
    CURRENT_DIR=`pwd`
else
    CURRENT_DIR="$SEARCHDIR"
fi

EXIT_STATUS=1

while :; do
    if [ "$TEST_FLAG" "$CURRENT_DIR/$WANTED" ]; then
        if [ "$QUIET" -eq 0 ]; then
            printf -- "$CURRENT_DIR\n"
        fi
        EXIT_STATUS=0
        break
    fi

    NEW_DIR=`dirname "$CURRENT_DIR"`

    if [ "$NEW_DIR" = "$CURRENT_DIR" ]; then
        break
    fi

    if [ -n "$NO_ESCAPE_HOME" -a "$NEW_DIR" = "$NO_ESCAPE_HOME" ]; then
        break
    fi

    CURRENT_DIR="$NEW_DIR"
done

exit "$EXIT_STATUS"
