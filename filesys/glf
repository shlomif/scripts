#!/usr/bin/env perl
#
# glf - get latest file in a directory by mtime, optionally limiting the
# files to those that match a particular regular expression (similar to
# *(om[1]) in ZSH except perhaps easier to type)

use 5.16.0;
use warnings;
use File::Spec::Functions qw(catfile);
use Getopt::Long qw(GetOptions);

GetOptions(
    'exclude|e=s' => \my $Flag_Exclude,
    'help|h|?'    => \&emit_help,
) or exit 64;

my $file_regex = shift // qr/^/;
my $directory  = shift // '.';

opendir( my $dh, $directory )
  or die "glf: could not open '$directory': $!\n";

my $latest_file;
# TODO stat module that supports 'struct timespec' for sub-second
# resolution on mtime?
my $latest_mtime = -1;

while ( my $file = readdir($dh) ) {
    next if $file eq '.' or $file eq '..';
    next unless $file =~ m/$file_regex/;
    if ( defined $Flag_Exclude ) {
        next if $file =~ m/$Flag_Exclude/;
    }
    my $file_mtime = ( stat( catfile( $directory, $file ) ) )[9];
    if ( $file_mtime > $latest_mtime ) {
        $latest_mtime = $file_mtime;
        $latest_file  = $file;
    }
}

my $exit_status = 2;
if ( defined $latest_file ) {
    say $latest_file;
    $exit_status = 0;
}
exit $exit_status;

sub emit_help {
    warn <<"END_USAGE";
Usage: glf [-e exclude_re] [file-regex] [directory]

Get latest file.

END_USAGE
    exit 64;
}
