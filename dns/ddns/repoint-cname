#!/bin/sh
#
# Updates a CNAME to point to a new host.
#
#   create-host newblah ...
#   repoint-cname newblah pointertoblah
#
# A common user request, thus best handled by a script that checks that
# everything is in order and does the switch in one request, instead of
# a `delete-cname ...; create-cname ...` shuffle.

DOM=example.net
KEY=/etc/nsuk.key
DNS_TTL=3593

# e.g. for testing, or if running local to the master DNS server anyways;
# otherwise perhaps better to let nsupdate figure out where the request
# needs to go.
SERVER=127.0.0.1

MAXWAITSECS=7
PROG_NAME="`basename "$0"`"

[ "$#" -ne 2 ] && {
  echo >&2 "usage: $PROG_NAME existinghost cname"
  exit 64
}

echo "$1" | fgrep "$DOM" >/dev/null && {
  echo >&2 "$PROG_NAME: use short host name"
  exit 65
}

[ -r "$KEY" ] || {
  echo >&2 "$PROG_NAME: cannot read nsupdate keyfile $KEY"
  exit 65
}

(
  if [ ! -z "$SERVER" ]; then
    echo "server $SERVER"
  fi
  cat <<EOF
prereq yxrrset $2.$DOM. CNAME
prereq yxdomain $1.$DOM.
update delete $2.$DOM. CNAME
update add $2.$DOM. $DNS_TTL CNAME $1.$DOM.
send
EOF
) | nsupdate -k "$KEY" -t "$MAXWAITSECS"

STATUS=$?
if [ "$STATUS" -ne 0 ]; then
  echo "$PROG_NAME: failed to add $2.$DOM. $DNS_TTL CNAME $1.$DOM."
fi
exit "$STATUS"
