#!/usr/local/bin/sh
#
# Deletes *all* records for a host, and possibly associated PTR records,
# if IP addresses are also supplied. Will *not* delete hosts that have
# an associated NS record, to help avoid accidental NS accidents.
#
#   delete-host mailhost

DOM=example.net
KEY=/etc/nsuk.key

# e.g. for testing, or if running local to the master DNS server anyways;
# otherwise perhaps better to let nsupdate figure out where the request
# needs to go.
SERVER=127.0.0.1

MAXWAITSECS=7
PROG_NAME="`basename "$0"`"

[ "$#" -eq 0 ] && {
  echo >&2 "usage: $PROG_NAME host [ipaddress ..]"
  exit 64
}

HOST="$1"
shift

echo "$HOST" | fgrep "$DOM" >/dev/null && {
  echo >&2 "$PROG_NAME: use short host name"
  exit 65
}

[ -r "$KEY" ] || {
  echo >&2 "$PROG_NAME: cannot read nsupdate keyfile $KEY"
  exit 65
}

(
  if [ ! -z "$SERVER" ]; then
    echo "server $SERVER"
  fi
  cat <<EOF
prereq yxdomain $HOST.$DOM
prereq nxrrset $HOST.$DOM NS
update delete $HOST.$DOM
send
EOF
) | nsupdate -k "$KEY" -t "$MAXWAITSECS"

STATUS=$?
if [ "$STATUS" -ne 0 ]; then
  echo "$PROG_NAME: non-zero exit from nsupdate (on delete A)"
  exit "$STATUS"
fi

# Need to support eviction of multiple IP as expect hosts to have both A
# and AAAA associated with them.
for ip in "$@"; do
  REV=`v4addr -q -r "$ip"`
  if [ -z "$REV" ]; then
    REV=`v6addr -q -r "$ip"`
    if [ -z "$REV" ]; then
      echo >&2 "$PROG_NAME: could not parse v4 or v6 address from $ip"
      exit 65
    fi
  fi

  (
    if [ ! -z "$SERVER" ]; then
      echo "server $SERVER"
    fi
    cat <<EOR
prereq yxrrset $REV PTR
update delete $REV PTR
send
EOR
  ) | nsupdate -k "$KEY" -t "$MAXWAITSECS"

  STATUS=$?
  if [ "$STATUS" -ne 0 ]; then
    echo "$PROG_NAME: failed to update delete $REV PTR"
    exit "$STATUS"
  fi
done
