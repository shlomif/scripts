#!/usr/local/bin/sh
#
# Create a CNAME.
#
#   create-host blah 192.0.2.42 2001:db8::c000:22a
#   create-cname blah pointertoblah
#
# NOTE there must exist some record for the target of the CNAME, though
# this could be a MX or TXT or some other not-A or not-AAAA record.
# There does not appear to be any way to specify that either an A or an
# AAAA must exist; the alternative would be a race-condition prone
# lookup for the said types hopefully against a master DNS server...

DOM=example.net
KEY=/etc/nsuk.key
DNS_TTL=3593

# e.g. for testing, or if running local to the master DNS server anyways;
# otherwise perhaps better to let nsupdate figure out where the request
# needs to go.
SERVER=127.0.0.1

MAXWAITSECS=7
PROG_NAME="`basename "$0"`"

[ "$#" -ne 2 ] && {
  echo >&2 "usage: $PROG_NAME existinghost cname"
  exit 64
}

echo "$1 $2" | fgrep "$DOM" >/dev/null && {
  echo >&2 "$PROG_NAME: use short host name"
  exit 65
}

[ -r "$KEY" ] || {
  echo >&2 "$PROG_NAME: cannot read nsupdate keyfile $KEY"
  exit 65
}

(
  if [ ! -z "$SERVER" ]; then
    echo "server $SERVER"
  fi
  cat <<EOF
prereq yxdomain $1.$DOM.
prereq nxdomain $2.$DOM.
update add $2.$DOM. $DNS_TTL CNAME $1.$DOM.
send
EOF
) | nsupdate -k "$KEY" -t "$MAXWAITSECS"

STATUS=$?
if [ "$STATUS" -ne 0 ]; then
  echo "$PROG_NAME: failed to update add $2.$DOM. $DNS_TTL CNAME $1.$DOM."
fi
exit "$STATUS"
