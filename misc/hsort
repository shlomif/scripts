#!/usr/bin/env perl
#
# "Human" sort that should emulate behavior of Finder (as of Mac OS X
# 10.2). Sorts numeric values so 10 appears after 2, and compares in case-
# insensitive manner. Note that filesystems cannot have duplicate
# filenames, so this script filters out repeated input lines.
#
# This script will fail if the amount of data to sort exceeds the memory
# available on the system.
#
# Pass a list of files to merge and sort, or supply the data to be
# sorted on standard input:
#
# hsort file1 file2 file3
# ls | hsort

END {
  # Report problems when writing to stdout (perldoc perlopentut)
  unless ( close(STDOUT) ) {
    warn "error: problem closing STDOUT: $!\n";
    exit 74;
  }
}

my @input = <>;
my %lookup;
# presize hash based on data
keys %lookup = scalar @input;

@lookup{ map {
  my $new;
  ($new = $_) =~ s/(\d+)/unpack "B32", pack "N",$1/eg;
  lc $new
} @input } = @input;

print @lookup{sort keys %lookup};

=pod SCRIPT CATEGORIES

Utilities

=cut
