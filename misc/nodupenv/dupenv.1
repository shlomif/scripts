.Dd November 26 2017
.Dt DUPENV 1
.nh
.Os
.Sh NAME
.Nm dupenv
.Nd creates duplicate environment variables
.Sh SYNOPSIS
.Bk -words
.Nm
.Op Fl i
.Op Fl U
.Op Ar env=val ..
.Op Ar command Op Ar args ..
.Ek
.Sh DESCRIPTION
.Nm
allows the creation of duplicate environment variables, which are then
passed to the given
.Ar command ,
or without that
.Nm
instead prints out the existing environment variables and exits.
Options:
.Bl -tag -width Ds
.It Fl i
Clears the environment. By default, the existing environment will be
passed along along with any additional environment variables set on the
command line.
.It Fl U
Allows the ability to set nameless environment variables.
.El
.Pp
.Sh EXIT STATUS
.Ex -std
.Sh EXAMPLES
Usage may be most readily contrasted with the
.Xr env 1
utility that does not support the creation duplicate environment
variables. Note however that
.Xr env 1
may display or silently pass along the duplicate variables.
.Pp
.Dl $ Ic env -i FOO=bar FOO=zot /usr/bin/env
.Dl FOO=zot
.Dl $ Ic dupenv -i FOO=bar FOO=zot /usr/bin/env
.Dl FOO=bar
.Dl FOO=zot
.Dl $ Ic dupenv -i FOO=bar FOO=zot /usr/bin/env /usr/bin/env
.Dl FOO=bar
.Dl FOO=zot
.Dl $ 
.Pp
Other programs may strip the duplicates (using the first, or the last
instance), or may retain the duplicates (and use the first or last), or
may fail horribly. Good luck!
.Pp
There is also the matter of nameless environment variables, which
.Xr env 1
may prevent the setting of (BSD, yes; Linux, no), but will happily
display and pass along:
.Pp
.Dl $ Ic dupenv -i -U =zip =zop /usr/bin/env
.Dl =zip
.Dl =zop
.Dl $ Ic dupenv -i -U =zip =zop /usr/bin/env /usr/bin/env
.Dl =zip
.Dl =zop
.Dl $ 
.Pp
How various applications handle such nameless env is an open question.
.Sh SEE ALSO
.Xr Proc::FastSpawn 3pm ,
.Xr env 1 ,
.Xr nodupenv 1
.Sh AUTHOR
.An Jeremy Mates
