#!/usr/bin/env perl
#
# Utility to tail multiple files. Probably better to use current
# versions of tail(1), which can follow multiple files. Run perldoc(1)
# on this file for additional documentation.

use strict;
use warnings;

use Carp;
use File::Tail 0.91;
use Getopt::Std;

END {
  # Report problems when writing to stdout (perldoc perlopentut)
  unless ( close(STDOUT) ) {
    warn "error: problem closing STDOUT: $!\n";
    exit 74;
  }
}

my ( %opts, @files, $prefix );

# Various File::Tail object preferences. Listen much faster than default
# to emulate tail(1) at expense of more busy wait.
my $maxinterval = 2;
my $interval    = 1;
my $adjustafter = 1;
my $tail        = 0;
my $reset_tail  = 0;

getopts( 'h?m:i:a:t:r:f', \%opts );

help() if exists $opts{h} or exists $opts{'?'};

$maxinterval = $opts{m} if exists $opts{m} and $opts{m} =~ /^\d+$/;
$interval    = $opts{i} if exists $opts{i} and $opts{i} =~ /^\d+$/;
$adjustafter = $opts{a} if exists $opts{a} and $opts{a} =~ /^\d+$/;
$tail        = $opts{t} if exists $opts{t} and $opts{t} =~ /^-?\d+$/;
$reset_tail  = $opts{r} if exists $opts{r} and $opts{r} =~ /^-?\d+$/;

$prefix = 1 if exists $opts{f};

chomp( @ARGV = readline *STDIN ) unless @ARGV;

help() unless @ARGV;

for (@ARGV) {
  push @files,
    File::Tail->new(
    name        => "$_",
    maxinterval => $maxinterval,
    interval    => $interval,
    adjustafter => $adjustafter,
    tail        => $tail,
    reset_tail  => $reset_tail,
    );
}

my $rin = q{};
my $nfound;

# don't buffer STDOUT
$| = 1;

while (1) {
  $nfound = File::Tail::select( undef, undef, undef, 60, @files );
  unless ($nfound) {
    my @ints;
    for (@files) {
      push @ints, $_->interval;
    }
  }
  for (@files) {
    unless ( $_->predict ) {
      print $_->{"input"}, ': ' if $prefix;
      print $_->read;
    }
  }
}

exit;

sub help {
  warn <<"HELP";
Usage: $0 [opts] [file1 file2 .. fileN]

Merges growing files into single stream

Options:
  -h/-?  Display this message

  -f     Prefix output with source filename (buggy)

  -m sec  Check file for updates this often at most.
  -i sec  Initial sleep period before checking file.
  -a sec  Times to wait until adjusting check interval.

  -t num  Read num lines from file.  Negative is whole file.
  -r num  Lines to read after file reset.

Run perldoc(1) on this script for additional documentation.

HELP
  exit 64;
}

=head1 NAME

eet - merges growing files into single stream

=head1 SYNOPSIS

To follow two log files at the same time:

  $ eet /var/log/messages /var/log/maillog

=head1 DESCRIPTION

=head2 Overview

This script does roughly the opposite of tee(1), reading in from
multiple files and merging them all into STDOUT via
L<File::Tail|File::Tail>.

=head2 Normal Usage

  $ eet [options] [file1 file2 .. fileN]

See L<"OPTIONS"> for details on the command line switches supported.

If no files are mentioned on the command line for reading, this script
will look for them on STDIN.

=head1 OPTIONS

This script currently supports the following command line switches:

=over 4

=item B<-h>, B<-?>

Prints a brief usage note about the script.

=item B<-f>

Prefix output with source filenames.  This only kinda worked during
testing, and is probably due to how L<File::Tail|File::Tail> behaves.

=item B<-m> I<seconds> (maxinterval)

Check file for updates this often at most.

=item B<-i> I<seconds> (interval)

Initial sleep period before checking file.

=item B<-a> I<seconds> (adjustafter)

Times to wait until adjusting check interval.

=item B<-t> I<number> (tail)

Read num lines from file.  Negative is whole file.

=item B<-r> I<number> (reset_tail)

Lines to read after file reset.

=back

See L<File::Tail> for more information on the parenthesized parameter
names, which are L<File::Tail|File::Tail> parameters passed directly to
the object.

=head1 EXAMPLES

Read through then follow several Apache VirtualHost logfiles, passing
them to a colorizing utility.

  $ eet -t -1 /www/site/logs/*_log | colorize

=head1 BUGS

=head2 Reporting Bugs

Newer versions of this script may be available from:

http://github.com/thrig/sial.org-scripts/tree/master

If the bug is in the latest version, send a report to the author.
Patches that fix problems or add new features are welcome.

=head2 Known Issues

The B<-f> prefix option does not work right all the time.

=head1 SEE ALSO

perl(1)

=head1 AUTHOR

thrig - Jeremy Mates (cpan:JMATES) C<< <jmates at cpan.org> >>

=head1 COPYRIGHT

Copyright (c) 2015 Jeremy Mates

     Permission to use, copy, modify, and/or distribute this software for
     any purpose with or without fee is hereby granted, provided that the
     above copyright notice and this permission notice appear in all
     copies.

     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
     WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
     WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
     AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
     DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA
     OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
     TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
     PERFORMANCE OF THIS SOFTWARE.

=head1 HISTORY

Based heavily on the select_demo script from L<File::Tail|File::Tail>
by Matija Grabnar.

=head1 SCRIPT CATEGORIES

Utilities
Unix/System_administration

=cut
