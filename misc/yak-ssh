#!/bin/sh
#
# yak-ssh - like yak, but for SSH_ORIGINAL_COMMAND via SSH sessions. in
# ~/.ssh/authorized_keys add a command restriction for the key
#
#   command="/path/to/yak-ssh" ssh-rsa AAAA...
#
# then use SSH and inspect the ssh-yak.* output for the command and env
# gleanings. a shorter version less concerned with the env and tmp
# security needs might run something like
#
#   #!/bin/sh
#   printf "$SSH_ORIGINAL_COMMAND\n" >> "$HOME"/tmp/ssh-yak
#   eval "$SSH_ORIGINAL_COMMAND"
#
# NOTE software may already support limited access via ssh e.g. git-shell(1)

YAK_OUTPUT=`mktemp -q "/tmp/yak-ssh.XXXXXXXXXX`" || {
   echo >&2 "mktemp failed to create /tmp file"
   exit 1
}
chmod go-r "$YAK_OUTPUT"
(
   printf "$SSH_ORIGINAL_COMMAND\n\n"
   if [ -t 0 ]; then
      tty
      printf "\n"
   fi
   env
) >> "$YAK_OUTPUT"

# if there's no fancy shell syntax then instead
#exec $SSH_ORIGINAL_COMMAND
eval "$SSH_ORIGINAL_COMMAND"
