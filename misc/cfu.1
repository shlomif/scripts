.Dd May 20 2017
.Dt CFU 1
.nh
.Os
.Sh NAME
.Nm cfu
.Nd compiles and runs C code
.Sh SYNOPSIS
.Nm
.Bk -words
.Op Fl E Ar exeargs
.Op Fl F Ar name
.Op Fl g Ar globals
.Op Cm --preserve
.Op Cm --show-code
.Ar c-statements|-
.Ek
.Sh DESCRIPTION
.Nm
compiles and runs C code via temporary files. The code will be taken
from the command line arguments, or from standard input if the only
argument is a hypen.
Options:
.Bl -tag -width Ds
.It Cm --eargs= Ns exeargs Op Fl E Ar exeargs
Arguments to pass to the compiled executable. May be specified more than
once to pass multiple arguments.
.It Cm --fakname= Ns name Op Fl F Ar name
Use
.Ar name
as the application name executed instead of
.Nm .
.It Cm --globals= Ns globals Op Fl g Ar globals
Globals for the C source code (defines, global variables, includes).
Many includes are set by default. May be specified more than once to
pass multiple arguments.
.It Cm --preserve Op Fl P
Do not unlink the temporary source and executable files at exit. The
paths to these files will be printed to standard output.
.It Cm --show-code Op Fl l
Shows the code that would be compiled, then exits.
.El
.Sh ENVIRONMENT
.Bl -tag -width Ds
.It Cm CC
Sets the name of the compiler to use,
.Pa cc
by default.
.It Cm CFLAGS
Arguments for the compiler. These will be shell word split. Flags are
set by default; see the source code for details.
.El
.Sh EXIT STATUS
.Ex -std
.Nm
tries to pass along the exit status of the compiler, and replaces itself
with the compiled program if all goes well.
.Sh EXAMPLES
No trailing semicolon is required on individual arguments.
.Pp
.Dl $ Ic cfu 'puts("hi")' 'puts("there")'
.Pp
But is between multiple statements in a single argument.
.Pp
.Dl $ Ic cfu 'double x=0/0.; char *c=(char *)&x; c[2]=7; printf("%g\en",x)'
.Pp
A more complicated example that sets a define and passes an argument to
the executable.
.Pp
.Dl $ Ic cfu -g '#define X 10' -E arg 'printf("%s %d\en", *++argv, X)'
.Pp
The program name can be customized, if necessary.
.Pp
.Dl $ Ic cfu 'printf("%s\en", *argv)'
.Dl cfu
.Dl $ Ic cfu -F foo 'printf("%s\en", *argv)'
.Dl foo
.Pp
.Sh AUTHOR
.An Jeremy Mates
