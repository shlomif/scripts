#|
eval 'exec sbcl --script "$0" ${1+"$@"}'
|#

; Common LISP version of
;
;   perl -E 'say join ".", map { sprintf "%u", hex } unpack "(a2)*", shift'
; or
;   perl -e 'printf "%v*d\n", ".", pack "N", hex shift'
;
; to convert such inputs as 7f000001 into a more common form but with a
; little more error checking. there is also an assembly implementation
; of this under the ../asm directory

(defun hexip-to-octets (hexip)
  (handler-case
    (loop for i from 0 to (1- (length hexip)) by 2 collecting
          (let ((highlow (list (char hexip (1+ i)))))
            (push (char hexip i) highlow)
            (parse-integer (coerce highlow 'string) :radix 16)))
    (error (condition) (exit :abort t))))

(defparameter ol (hexip-to-octets (cadr *posix-argv*)))
(or (eql (list-length ol) 4) (exit :abort t))
(progn (format t "~{~d~^.~}~%" ol) (values))
