#!/usr/bin/env perl
#
# Converts IPv4 addresses and hostnames (input to Socket::inet_aton) to
# hex format.

use strict;
use warnings;

use Socket qw(inet_aton);

use Getopt::Std;
my %opts;
getopts('o6q', \%opts);

END {
  # Report problems when writing to stdout (perldoc perlopentut)
  unless ( close(STDOUT) ) {
    warn "error: problem closing STDOUT: $!\n";
    exit 74;
  }
}

chomp(@ARGV = readline *STDIN) unless @ARGV;

for my $input (@ARGV) {
  my $sin = inet_aton $input;
  unless (defined $sin) {
    warn "notice: skipping as could not translate: $input\n" unless $opts{q};
    next;
  }
  my $string = unpack "H*", $sin;

  # optionally tidy up for IPv6-ish use
  if ($opts{6}) {
    $string =~ s/^(.+)(....)/$1:$2/g;
    $string =~ s/:0+/:/g;
    $string = '::' . uc $string;
  }

  print exists $opts{o} ? "$input " : "", $string, "\n";
}
