#!/usr/bin/env perl
#
# snooze - sleep for a given duration, with SIGINFO (control+t maybe)
# or SIGQUIT (control+\ typically) showing how much time remains.

use strict;
use warnings;
use Term::ReadKey qw(ReadMode);

my %factors = ( s => 1, m => 60, h => 3600, d => 86400 );

my $arg = shift or die "Usage: snooze sleep-time [label]\n";
my $to_sleep = 0;
while ( $arg =~ m/([0-9]+)([smhd])?/g ) {
    my $value = $1;
    $value *= $factors{$2} if $2;
    $to_sleep += $value;
}
die "Usage: snooze time-duration [label]\n" if $to_sleep == 0;

my $label = shift;
$0 = $label ? "snooze-$label" : "snooze";

ReadMode 3;    # noecho to hide control+\s from gunking up the message

my $total_time = $to_sleep;

$SIG{$_} = \&remainder for qw/ALRM INFO QUIT/;
$SIG{$_} = \&restore   for qw/HUP INT TERM USR1 USR2/;
$SIG{TSTP} = 'IGNORE';

$to_sleep -= sleep $to_sleep while ( $to_sleep > 0 );

sub deltatimefmt {
    my $difference = shift;

    return "0s" if $difference == 0;

    my $seconds = $difference % 60;
    $difference = ( $difference - $seconds ) / 60;
    my $minutes = $difference % 60;
    $difference = ( $difference - $minutes ) / 60;

    my $hours = $difference % 24;
    $difference = ( $difference - $hours ) / 24;
    my $days = $difference % 7;

    my $temp = ($days) ? "${days}d" : q{};
    $temp .= ($hours)   ? "${hours}h"   : q{};
    $temp .= ($minutes) ? "${minutes}m" : q{};
    $temp .= ($seconds) ? "${seconds}s" : q{};
    return $temp;
}

sub remainder {
    warn sprintf "$0: %s remaining (%d%%)\n", deltatimefmt($to_sleep),
      $to_sleep / $total_time * 100;
}

sub restore {
    warn sprintf "$0: %s remainds  (%d%%)\n", deltatimefmt($to_sleep),
      $to_sleep / $total_time * 100;
    exit 1;
}

END { ReadMode 0 }
