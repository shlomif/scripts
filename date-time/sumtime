#!/usr/bin/env perl
#
# Totals up short-hand time durations such as 3h20m.

use 5.16.0;
use warnings;
use Getopt::Long qw(GetOptions);
GetOptions(
    'compact|c' => \my $Flag_Compact,
    'help|h|?'  => \&emit_help,
) or exit 65;

my %factors = (
    w => 604800,
    d => 86400,
    h => 3600,
    m => 60,
    s => 1,
);
my $factor_char = qr/[smhdw]/;

my $Time_Sum;

if ( !@ARGV or ( @ARGV == 1 and $ARGV[0] eq '-' ) ) {
    sumtime() while readline *STDIN;
} else {
    $_ = "@ARGV";
    sumtime();
}
die "did not parse any duration\n" if !defined $Time_Sum;

say deltatimefmt($Time_Sum);

sub deltatimefmt {
    my ($difference) = @_;

    return "0s" if $difference == 0;

    my $seconds = $difference % 60;
    $difference = ( $difference - $seconds ) / 60;
    my $minutes = $difference % 60;
    $difference = ( $difference - $minutes ) / 60;

    my $hours = $difference % 24;
    $difference = ( $difference - $hours ) / 24;
    my $days  = $difference % 7;
    my $weeks = ( $difference - $days ) / 7;

    my $temp = ($weeks) ? "${weeks}w " : q{};
    $temp .= ($days)    ? "${days}d "    : q{};
    $temp .= ($hours)   ? "${hours}h "   : q{};
    $temp .= ($minutes) ? "${minutes}m " : q{};
    $temp .= ($seconds) ? "${seconds}s"  : q{};
    $temp =~ tr/ //d if $Flag_Compact;
    return $temp;
}

sub emit_help {
    warn <<"END_USAGE";
Usage: sumtime [time-specifications|-]

Totals up time durations (such as 194) in the short-hand form of 3m14s.

END_USAGE
    exit 64;
}

sub sumtime {
    {
        # shorthand 3m
        $Time_Sum += $1 * $factors{$2}, redo
          if /\G(\d+)($factor_char)/acg;

        # raw seconds 180
        $Time_Sum += $1, redo if /\G(\d+)/acg;

        # skip .decimals (TODO warn about them?)
        redo if /\G\.\d+/acg;

        # otherwise skip to the next interesting bit
        redo if /\G\D+/acg;
    }
}
